# factoring script docker file
# run a factorizer in a container!

# basic setup to use in other containers
FROM ubuntu:20.04 AS cpan
RUN apt-get update && apt-get install -y apt-utils && apt-get dist-upgrade -y
RUN apt-get install -y --no-install-recommends curl gcc libc6-dev libgmp-dev make perl
RUN curl -sSL http://cpanmin.us > cpanmin.us && chmod +x cpanmin.us
RUN cat cpanmin.us | perl - --self-upgrade
RUN cpanm \
      Data::Dumper \
      File::Slurp \
      Getopt::Long \
      List::Util \
      List::MoreUtils \
      Math::BigInt::GMP \
      Math::Prime::Util \
      Math::Prime::Util::GMP

FROM nvidia/cuda:11.6.0-devel-ubuntu20.04 AS ecm
RUN apt-get update && apt-get install -y git
RUN git clone https://gitlab.inria.fr/zimmerma/ecm.git
WORKDIR /ecm
RUN git clone https://github.com/NVlabs/CGBN.git
RUN apt-get update && apt-get install -y libgmp-dev libtool
RUN libtoolize && autoheader && aclocal && automake -c -a && autoconf
RUN ./configure --enable-gpu --enable-openmp --with-cuda=/usr/local/cuda --with-cgbn-include=CGBN/include/cgbn
RUN make && make check && make install


FROM nvidia/cuda:11.6.0-base-ubuntu20.04
#RUN apt-get update && apt-get install -y --no-install-recommends curl gcc gmp-ecm libc-dev-bin libc6-dev libgmp-dev make perl
# Configure nvidia repo
COPY --from=cpan /cpanmin.us /
RUN apt-get update && apt-get install -y --no-install-recommends libgomp1 perl
RUN apt-get install -y --no-install-recommends make \
  && cat cpanmin.us | perl - --self-upgrade \
  && apt-get purge -y --auto-remove make
COPY --from=cpan /usr/local /usr/local
COPY --from=ecm /usr/local/bin/ecm /usr/bin/
COPY * /var/primemath/
WORKDIR /var/primemath/
CMD [ "./driver.pl", "--curve=0"]
